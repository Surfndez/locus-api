name: Release

on:
  push:
    tags:
      - '*'

env:
  BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
  BINTRAY_KEY: ${{ secrets.BINTRAY_KEY }}
  ANDROID_SIGN_DEBUG: ${{ secrets.ANDROID_SIGN_DEBUG }}
  ANDROID_SIGN_RELEASE: ${{ secrets.ANDROID_SIGN_RELEASE }}

jobs:
  build:
    name: Release API
    runs-on: ubuntu-latest

    # job steps
    steps:
      # Prepare source code
      # https://github.com/marketplace/actions/checkout
      - name: Clone repo
        uses: actions/checkout@v2

      # Setup of environment
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      # Public Locus API
      - name: Publish `locus-api-core`
        run: ./gradlew :locus-api-core:clean :locus-api-core:publishToMavenLocal :locus-api-core:bintrayUpload

      # Publish Locus API - Android
      - name: Publish `locus-api-android`
        run: ./gradlew :locus-api-android:clean :locus-api-android:build :locus-api-android:bintrayUpload --info

#      - name: Publish `locus-api-core`
#        # The GITHUB_REF tag comes in the format 'refs/tags/xxx'.
#        # So if we split on '/' and take the 3rd value, we can get the release name.
#        run: |
#          NEW_VERSION=$(echo "${GITHUB_REF}" | cut -d "/" -f3)
#          echo "New version: ${NEW_VERSION}"
#          echo "Github username: ${GITHUB_ACTOR}"
#          ./gradlew -PAPI_VERSION=${NEW_VERSION} locus-api-core:publishReleasePublicationToGitHubPackagesRepository
#
#      - name: Publish `locus-api-android`
#        # The GITHUB_REF tag comes in the format 'refs/tags/xxx'.
#        # So if we split on '/' and take the 3rd value, we can get the release name.
#        run: |
#          NEW_VERSION=$(echo "${GITHUB_REF}" | cut -d "/" -f3)
#          echo "New version: ${NEW_VERSION}"
#          echo "Github username: ${GITHUB_ACTOR}"
#          ./gradlew -PAPI_VERSION=${NEW_VERSION} locus-api-android:publishReleasePublicationToGitHubPackagesRepository
